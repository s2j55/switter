{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","classNAme","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","orderBy","onSnapshot","snapshot","sweetArray","docs","map","Navigation","display","justifyContent","marginTop","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3db2cea6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY, \r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => { \r\n  const onSocialClick = async (event) => {\r\n    const { \r\n      target: { name }, \r\n    } = event; \r\n    //ES6\r\n  let provider;\r\n  if(name === \"google\") {\r\n    provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n  } else if(name === \"github\") {\r\n    provider = new firebaseInstance.auth.GithubAuthProvider();\r\n  }\r\n  await authService.signInWithPopup(provider);\r\n\r\n};\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div classNAme=\"authBtns\">\r\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n            Continue with Google<FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github<FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sweet = ({sweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\r\n        // console.log(ok);\r\n        if(ok) {\r\n            //delete sweet\r\n            await dbService.doc(`sweets/${sweetObj.id}`).delete();\r\n            await storageService.refFromURL(sweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // console.log(sweetObj, newSweet);\r\n        await dbService.doc(`sweets/${sweetObj.id}`).update({\r\n            text: newSweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n    setNewSweet(value);\r\n};\r\n    return (\r\n            <div className=\"sweet\">\r\n                {editing ? (\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container sweetEdit\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"Edit your sweet\" \r\n                                        value={newSweet} \r\n                                        required\r\n                                        autoFocus\r\n                                        onChange={onChange} \r\n                                        className=\"formInput\"   \r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\r\n                                </form>\r\n                                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                    Cancel\r\n                                </span>\r\n                            </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{sweetObj.text}</h4>\r\n                        {sweetObj.attachmentUrl && <img src={sweetObj.attachmentUrl} alt=\"\" />}\r\n                            {isOwner && (\r\n                                <div className=\"sweet__actions\">\r\n                                    <span onClick={onDeleteClick}>\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                    </span>\r\n                                    <span onClick={toggleEditing}>\r\n                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                    </span>\r\n                                </div>\r\n                             )}\r\n                    </>\r\n                   )}\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default Sweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n  const [sweet, setSweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (sweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const sweetObj = {\r\n      text: sweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"sweets\").add(sweetObj);\r\n    setSweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default SweetFactory;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n        const [sweets, setSweets] = useState([]);\r\n \r\n        useEffect(() => {\r\n            dbService\r\n            .collection(\"sweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot(snapshot => {\r\n                const sweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setSweets(sweetArray);\r\n            });\r\n        }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <SweetFactory userObj={userObj} />\r\n            <div>\r\n                {sweets.map((sweet) => (\r\n                    <Sweet \r\n                        key={sweet.id} \r\n                        sweetObj={sweet} \r\n                        isOwner={sweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\nreturn (\r\n    <>\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link></li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');                                                   \r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    /* const getMySweets = async() => {\r\n        const sweets = await dbService\r\n            .collection(\"sweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .get();\r\n        console.log(sweets.docs.map(doc => doc.data()));\r\n    }; */\r\n    /* useEffect(() => {\r\n        getMySweets();\r\n    }, []);\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n    }; */\r\n// Edit my name(my profile)\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                // TODO photoURL도 만들어서 넣어보기\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} classNAme=\"profileForm\">\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\"\r\n                autoFocus \r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                className=\"formInput\" \r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }} \r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Redirect, HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n         <div\r\n         style={{\r\n           maxWidth: 890,\r\n           width: \"100%\",\r\n           margin: \"0 auto\",\r\n           marginTop: 80,\r\n           display: \"flex\",\r\n           justifyContent: \"center\",\r\n         }}\r\n       >\r\n          <Route exact path=\"/\">\r\n            <Home userObj={userObj} />\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </div>\r\n        )\r\n         : \r\n        (\r\n        <>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\" />\r\n         </>\r\n         )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from 'react';\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      // it depends on the status of user's log in\r\n      if (user) {\r\n      //  setIsLoggedIn(true);\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      } \r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  // user's profile을 update하고 navigation에 바로 apply 하기 위해서 만듦.\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n        displayName: user.displayName,\r\n        uid: user.uid,\r\n        updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n  // setInterval(() => {\r\n  //  console.log(authService.currentUser)\r\n  // }, 2000)\r\n  return (\r\n  <>\r\n  {/* {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"} */}\r\n    {init ? (\r\n      <AppRouter \r\n        refreshUser={refreshUser}\r\n        isLoggedIn={Boolean(userObj)} \r\n        userObj={userObj}   \r\n      />\r\n    ) : (\r\n      \"Initializing...\"\r\n    )}\r\n  {/* <footer>&copy; Switter {new Date().getFullYear()} </footer> */}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./style.css\";\r\n// import fbase from './fbase';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}